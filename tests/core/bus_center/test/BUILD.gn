# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/communication/dsoftbus/dsoftbus.gni")

module_output_path = "dsoftbus/test"

ohos_unittest("HeartBeatMediumTest") {
  module_out_path = module_output_path
  sources = [
    "$dsoftbus_root_path/core/bus_center/lnn/lane_hub/heartbeat/src/lnn_ble_heartbeat_virtual.c",
    "$dsoftbus_root_path/core/bus_center/lnn/lane_hub/heartbeat/src/lnn_heartbeat_utils.c",
    "$dsoftbus_root_path/core/bus_center/utils/src/lnn_connection_addr_utils.c",
    "$dsoftbus_root_path/tests/core/bus_center/lnn/net_builder/src/lnn_net_ledger_mock.cpp",
    "$dsoftbus_root_path/tests/core/bus_center/mock_common/src/distribute_net_ledger_mock.cpp",
    "$dsoftbus_root_path/tests/core/bus_center/test/heartbeat/HB_medium_mgr_test.cpp",
    "$dsoftbus_root_path/tests/core/bus_center/test/mock/src/hb_strategy_mock.cpp",
  ]

  include_dirs = [
    "$dsoftbus_root_path/tests/core/bus_center/test/mock/include",
    "$dsoftbus_root_path/tests/core/bus_center/mock_common/include",
    "$dsoftbus_root_path/core/connection/p2p/common/include",
    "$dsoftbus_root_path/core/connection/p2p/interface",
    "$dsoftbus_root_path/core/bus_center/service/include",
    "$dsoftbus_root_path/tests/core/bus_center/lnn/net_builder/include",
    "$dsoftbus_root_path/core/authentication/include",
    "$dsoftbus_root_path/core/authentication/interface",
    "$dsoftbus_root_path/core/discovery/interface",
    "$dsoftbus_root_path/core/discovery/manager/include",
    "$dsoftbus_root_path/core/core/discovery/manager/include",
    "$dsoftbus_root_path/core/bus_center/lnn/lane_hub/heartbeat/src",
    "$dsoftbus_root_path/core/bus_center/interface",
    "$dsoftbus_root_path/core/common/include",
    "$dsoftbus_root_path/core/bus_center/lnn/lane_hub/heartbeat/include",
    "$dsoftbus_root_path/core/bus_center/utils/include",
    "$dsoftbus_root_path/core/bus_center/lnn/net_ledger/common/include",
    "$dsoftbus_root_path/core/bus_center/lnn/net_ledger/distributed_ledger/include",
    "$dsoftbus_root_path/core/bus_center/lnn/net_builder/include",
    "$dsoftbus_root_path/core/adapter/bus_center/include",
    "$dsoftbus_root_path/adapter/common/include",
    "$dsoftbus_root_path/core/common/include",
  ]

  deps = [
    "$dsoftbus_root_path/adapter:softbus_adapter",
    "$dsoftbus_root_path/core/common:softbus_utils",
    "//base/security/device_auth/services:deviceauth_sdk",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core:ipc_core",
    "//third_party/googletest:gmock",
    "//third_party/googletest:gtest_main",
  ]

  if (is_standard_system) {
    external_deps = [
      "c_utils:utils",
      "hiviewdfx_hilog_native:libhilog",
    ]
  } else {
    external_deps = [
      "c_utils:utils",
      "hilog:libhilog",
      "huks:libhukssdk",
    ]
  }
}

ohos_unittest("HeartFsmTest") {
  module_out_path = module_output_path
  sources = [
    "$dsoftbus_root_path/core/bus_center/lnn/lane_hub/heartbeat/src/lnn_ble_heartbeat_virtual.c",
    "$dsoftbus_root_path/core/bus_center/lnn/lane_hub/heartbeat/src/lnn_heartbeat_utils.c",
    "$dsoftbus_root_path/core/bus_center/utils/src/lnn_state_machine.c",
    "$dsoftbus_root_path/tests/core/bus_center/lnn/net_builder/src/lnn_net_ledger_mock.cpp",
    "$dsoftbus_root_path/tests/core/bus_center/mock_common/src/distribute_net_ledger_mock.cpp",
    "$dsoftbus_root_path/tests/core/bus_center/mock_common/src/lnn_connection_mock.cpp",
    "$dsoftbus_root_path/tests/core/bus_center/test/heartbeat/HB_fsm_test.cpp",
    "$dsoftbus_root_path/tests/core/bus_center/test/mock/src/hb_fsm_mock.cpp",
  ]

  include_dirs = [
    "$dsoftbus_root_path/core/connection/interface",
    "$dsoftbus_root_path/tests/core/bus_center/test/mock/include",
    "$dsoftbus_root_path/tests/core/bus_center/mock_common/include",
    "$dsoftbus_root_path/core/connection/p2p/common/include",
    "$dsoftbus_root_path/core/connection/p2p/interface",
    "$dsoftbus_root_path/core/bus_center/service/include",
    "$dsoftbus_root_path/tests/core/bus_center/lnn/net_builder/include",
    "$dsoftbus_root_path/core/authentication/include",
    "$dsoftbus_root_path/core/authentication/interface",
    "$dsoftbus_root_path/core/discovery/interface",
    "$dsoftbus_root_path/core/discovery/manager/include",
    "$dsoftbus_root_path/core/core/discovery/manager/include",
    "$dsoftbus_root_path/core/bus_center/lnn/lane_hub/heartbeat/src",
    "$dsoftbus_root_path/core/bus_center/interface",
    "$dsoftbus_root_path/core/common/include",
    "$dsoftbus_root_path/core/bus_center/lnn/lane_hub/heartbeat/include",
    "$dsoftbus_root_path/core/bus_center/utils/include",
    "$dsoftbus_root_path/core/bus_center/lnn/net_ledger/common/include",
    "$dsoftbus_root_path/core/bus_center/lnn/net_ledger/distributed_ledger/include",
    "$dsoftbus_root_path/core/bus_center/lnn/net_builder/include",
    "$dsoftbus_root_path/core/adapter/bus_center/include",
    "$dsoftbus_root_path/adapter/common/include",
    "$dsoftbus_root_path/core/common/include",
  ]

  deps = [
    "$dsoftbus_root_path/adapter:softbus_adapter",
    "$dsoftbus_root_path/core/common:softbus_utils",
    "//base/security/device_auth/services:deviceauth_sdk",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core:ipc_core",
    "//third_party/googletest:gmock",
    "//third_party/googletest:gtest_main",
  ]

  if (is_standard_system) {
    external_deps = [
      "c_utils:utils",
      "hiviewdfx_hilog_native:libhilog",
    ]
  } else {
    external_deps = [
      "c_utils:utils",
      "hilog:libhilog",
      "huks:libhukssdk",
    ]
  }
}

group("unittest") {
  testonly = true
  deps = [
    ":HeartBeatMediumTest",
    ":HeartFsmTest",
  ]
}
